---

- name: Check zone prerequisites
  assert:
    that:
      - bind__zone is defined
      - bind__zone.name is defined and bind__zone.name is match('^[a-zA-Z0-9.-]+$')
      - bind__zone.type is defined
    msg: >
      bind__zone must be defined with specifications and
      bind__zone.name must contains the name of the zone without any spaces
  tags: ['always']

- name: "Init some values for zone '{{ bind__zone.name }}'"
  set_fact:
    # this block must be synchronized with _macros.js one
    _bind__zone_file_path: "
      {%- if bind__zone.file == 'auto' -%}
      {%-   if bind__zone.type in ['master'] -%}
        {{ bind__static_zones_directory }}/db.{{ bind__zone.name }}
      {%-   else -%}
        {{ bind__dynamic_zones_directory }}/db.{{ bind__zone.name }}
      {%-   endif -%}
      {%- else -%}
      {%-   if bind__zone.file is match('^/') -%}
        {{ bind__zone.file }}
      {%-   else -%}
        {{ bind__static_zones_directory}}/{{ bind__zone.file }}
      {%-   endif -%}
      {%- endif -%}"
  tags: ['always']

- name: "Test if static zone file exists for zone '{{ bind__zone.name }}'"
  stat:
    path: '{{ _bind__zone_file_path }}'
  register: _bind__zone_stat
  tags: ['bind', 'bind-configure', 'bind-zone']

- name: "Get current raw zone serial for zone '{{ bind__zone.name }}'"
  command: /usr/bin/env grep '; Serial' '{{ _bind__zone_file_path }}'
  when: _bind__zone_stat.stat.exists and bind__zone.type in ['master']
  register: _bind__zone_serial_raw
  failed_when: _bind__zone_serial_raw.rc not in [0, 1]
  changed_when: false
  check_mode: false
  tags: ['bind', 'bind-configure', 'bind-zone']

- name: "Register current zone serial for zone '{{ bind__zone.name }}'"
  set_fact:
    _bind__zone_serial: "{{ _bind__zone_serial_raw.stdout|regex_search('[0-9]+') }}"
  when: bind__zone.type in ['master']
    and _bind__zone_stat.stat.exists
    and _bind__zone_serial_raw is success
  tags: ['bind', 'bind-configure', 'bind-zone']

- name: "Generate new serial if serial is badly formatted for zone '{{ bind__zone.name }}'"
  set_fact:
    _bind__zone_serial: "{{ bind__zones_entry_default['SOA']['data']['serial'] }}"
  when: bind__zone.type in ['master']
    and (
      not _bind__zone_serial
      or _bind__zone_serial is not match('2[0-9]{3}[0-9]{2}[0-9]{2}[0-9]{2}')
    )
  changed_when: not _bind__zone_serial
    or _bind__zone_serial is not match('2[0-9]{3}[0-9]{2}[0-9]{2}[0-9]{2}')
  tags: ['bind', 'bind-configure', 'bind-zone']

- name: "Download zone file from url for zone '{{ bind__zone.name }}'"
  get_url:
    url: '{{ bind__zone.source_url }}'
    dest: '{{ _bind__zone_file_path }}'
    mode: 0644
    backup: true
    force: true
    checksum: '{{ bind__zone.source_checksum|d(omit) }}'
  when: bind__zone.source_url is defined
  ignore_errors: '{{ bind__zone.source_ignore_errors|d(true)|bool }}'
  notify: ['reload-bind']
  tags: ['bind', 'bind-configure', 'bind-zone']

- name: "Install zone file if zone is master for zone '{{ bind__zone.name }}'"
  template:
    src: zone.j2
    dest: '{{ _bind__zone_file_path }}'
    owner: root
    group: '{{ bind__service_group }}'
    mode: 0640
    validate: "{{ bind__checkzone_program }} '{{ bind__zone.name }}' %s"
  when: bind__zone.type in ['master']
  register: _bind__master_zone_template
  notify: ['reload-bind']
  tags: ['bind', 'bind-configure', 'bind-zone']

- name: "Update serial if zone has changed for zone '{{ bind__zone.name }}'"
  set_fact:
    _bind__zone_serial:
      "{{  _bind__zone_serial[:-2]~
            ( '%02d'|format( _bind__zone_serial[-2:]|int + 1) )
            if _bind__zone_serial[:-2]
              is match(bind__zones_entry_default['SOA']['data']['serial'][:-2])
            else bind__zones_entry_default['SOA']['data']['serial'] }}"
  when: _bind__master_zone_template is changed and _bind__zone_serial|length
  changed_when: _bind__master_zone_template is changed and _bind__zone_serial|length
  tags: ['bind', 'bind-configure', 'bind-zone']

- name: "Install zone file if zone is master (second time with new serial) for '{{ bind__zone.name }}'"
  template:
    src: zone.j2
    dest: '{{ _bind__zone_file_path }}'
    owner: root
    group: '{{ bind__service_group }}'
    mode: 0640
    validate: "{{ bind__checkzone_program }} '{{ bind__zone.name }}' %s"
  when: bind__zone.type in ['master']
  notify: ['reload-bind']
  tags: ['bind', 'bind-configure', 'bind-zone']
